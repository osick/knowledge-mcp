[tool.poetry]
name = "local-mcp-server"
version = "0.1.0"
description = "Local MCP server for converting binary documents to text and optionally ingesting to Remote RAG API"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "local_mcp", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
markitdown = "^0.1.3"
httpx = "^0.28.0"
mcp = "^1.0.0"
pydantic = "^2.0.0"
pydantic-settings = "^2.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.24.0"
pytest-mock = "^3.14.0"
pytest-cov = "^6.0.0"
ruff = "^0.8.0"
mypy = "^1.13.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=local_mcp --cov-report=term-missing --cov-report=html"

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = []

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
